==5828== Memcheck, a memory error detector
==5828== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==5828== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==5828== Command: ./test
==5828== 
==5828== Syscall param open(filename) points to unaddressable byte(s)
==5828==    at 0x4127C63: __open_nocancel (syscall-template.S:82)
==5828==    by 0x40BDA2B: _IO_file_open (fileops.c:233)
==5828==    by 0x40BDBE7: _IO_file_fopen@@GLIBC_2.1 (fileops.c:338)
==5828==    by 0x40B1CE6: __fopen_internal (iofopen.c:93)
==5828==    by 0x40674D2: (below main) (libc-start.c:226)
==5828==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==5828== 
{
   <insert_a_suppression_name_here>
   Memcheck:Param
   open(filename)
   fun:__open_nocancel
   fun:_IO_file_open
   fun:_IO_file_fopen@@GLIBC_2.1
   fun:__fopen_internal
   fun:(below main)
}
==5828== 
==5828== HEAP SUMMARY:
==5828==     in use at exit: 0 bytes in 0 blocks
==5828==   total heap usage: 1 allocs, 1 frees, 352 bytes allocated
==5828== 
==5828== All heap blocks were freed -- no leaks are possible
==5828== 
==5828== For counts of detected and suppressed errors, rerun with: -v
==5828== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
